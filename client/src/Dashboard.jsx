// import React from 'react'
// import { useState,useEffect } from 'react';

// import { NavLink,Link,Outlet,useNavigate } from 'react-router-dom'
// import { BrowserRouter, Routes, Route } from 'react-router-dom';


// import TopNav from './component/layout/TopNav';
// // import Readproduct from './component/Pages/product/Readproduct';

// function Dashboard() {
//   const [isAuthenticated, setIsAuthenticated] = useState(false);
//   const navigate = useNavigate();

//   useEffect(() => {
//     const checkAuth = async () => {
//       try {
//         await axios.get('http://localhost:3000/api/auth/user', { withCredentials: true });
//         setIsAuthenticated(true);
//       } catch (error) {
//         setIsAuthenticated(false);
//         navigate('/login');  // Redirect to login if not authenticated
//       }
//     };

//     checkAuth();
//   }, [navigate]);

//   if (!isAuthenticated) {
//     return null;  // Optionally, return a loading spinner or null while checking authentication
//   }
//   return (
//     <div>
//   <main>
//     <aside>
//       <div className="top">
//         <div className="logo">
//         <span>MONARCH</span>
//           <span>STOCK MANAGEMENT</span>
//         </div>
//         <nav>
//           <NavLink to='/'>
//             <svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" viewBox="0 0 48 48"><path d="M39.5,43h-9c-1.381,0-2.5-1.119-2.5-2.5v-9c0-1.105-0.895-2-2-2h-4c-1.105,0-2,0.895-2,2v9c0,1.381-1.119,2.5-2.5,2.5h-9C7.119,43,6,41.881,6,40.5V21.413c0-2.299,1.054-4.471,2.859-5.893L23.071,4.321c0.545-0.428,1.313-0.428,1.857,0L39.142,15.52C40.947,16.942,42,19.113,42,21.411V40.5C42,41.881,40.881,43,39.5,43z" /></svg>
//             Home
//           </ NavLink>
       
         
       
//           <NavLink to='stockin'>
//           <svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" viewBox="0 0 48 48"><path d="M6.5 8C4.57 8 3 9.57 3 11.5L3 34L16.960938 34C19.340938 34 21.51 35.059063 23 36.789062L23 12C22.02 9.66 19.7 8 17 8L6.5 8 z M 31 8C28.3 8 25.98 9.66 25 12L25 36.789062C26.49 35.059063 28.659062 34 31.039062 34L45 34L45 11.5C45 9.57 43.43 8 41.5 8L31 8 z M 8.5 12L15.5 12C16.328 12 17 12.672 17 13.5C17 14.328 16.328 15 15.5 15L8.5 15C7.672 15 7 14.328 7 13.5C7 12.672 7.672 12 8.5 12 z M 35 12C35.83 12 36.5 12.67 36.5 13.5L36.5 14.109375C37.72 14.369375 38.689062 15.090703 39.289062 16.220703C39.639063 16.880703 39.510156 17.749453 38.910156 18.189453C38.140156 18.769453 37.070156 18.499922 36.660156 17.669922C36.490156 17.319922 36.220938 17 35.460938 17L34.619141 17C33.899141 17 33.269531 17.58 33.269531 18.25C33.269531 18.94 33.829531 19.5 34.519531 19.5L35.550781 19.5C37.740781 19.5 39.710703 21.070234 39.970703 23.240234C40.240703 25.550234 38.65 27.539922 36.5 27.919922L36.5 28.5C36.5 29.33 35.83 30 35 30C34.17 30 33.5 29.33 33.5 28.5L33.5 27.960938C31.86 27.770937 30.750937 26.759531 30.210938 25.769531C29.860937 25.119531 29.980078 24.260547 30.580078 23.810547C31.360078 23.230547 32.429844 23.500078 32.839844 24.330078C32.899844 24.440078 33.219062 25 34.039062 25L35.75 25C36.44 25 37 24.44 37 23.75C37 23.06 36.44 22.5 35.75 22.5L34.759766 22.5C32.859766 22.5 31.080469 21.349062 30.480469 19.539062C29.680469 17.109063 31.27 14.769922 33.5 14.169922L33.5 13.5C33.5 12.67 34.17 12 35 12 z M 8.5 19L15.5 19C16.328 19 17 19.672 17 20.5C17 21.328 16.328 22 15.5 22L8.5 22C7.672 22 7 21.328 7 20.5C7 19.672 7.672 19 8.5 19 z M 8.5 26L11.5 26C12.328 26 13 26.672 13 27.5C13 28.328 12.328 29 11.5 29L8.5 29C7.672 29 7 28.328 7 27.5C7 26.672 7.672 26 8.5 26 z M 3 36L3 36.5C3 38.43 4.57 40 6.5 40L22.609375 40C21.769375 37.6 19.500937 36 16.960938 36L3 36 z M 31.039062 36C28.499062 36 26.230625 37.6 25.390625 40L41.5 40C43.43 40 45 38.43 45 36.5L45 36L31.039062 36 z" /></svg>
//             Stock In 
//           </NavLink>
          
          
//           <NavLink to='stockout'>
//             <svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" viewBox="0 0 48 48"><path d="M6.5 8C4.57 8 3 9.57 3 11.5L3 34L16.960938 34C19.340938 34 21.51 35.059063 23 36.789062L23 12C22.02 9.66 19.7 8 17 8L6.5 8 z M 31 8C28.3 8 25.98 9.66 25 12L25 36.789062C26.49 35.059063 28.659062 34 31.039062 34L45 34L45 11.5C45 9.57 43.43 8 41.5 8L31 8 z M 8.5 12L15.5 12C16.328 12 17 12.672 17 13.5C17 14.328 16.328 15 15.5 15L8.5 15C7.672 15 7 14.328 7 13.5C7 12.672 7.672 12 8.5 12 z M 35 12C35.83 12 36.5 12.67 36.5 13.5L36.5 14.109375C37.72 14.369375 38.689062 15.090703 39.289062 16.220703C39.639063 16.880703 39.510156 17.749453 38.910156 18.189453C38.140156 18.769453 37.070156 18.499922 36.660156 17.669922C36.490156 17.319922 36.220938 17 35.460938 17L34.619141 17C33.899141 17 33.269531 17.58 33.269531 18.25C33.269531 18.94 33.829531 19.5 34.519531 19.5L35.550781 19.5C37.740781 19.5 39.710703 21.070234 39.970703 23.240234C40.240703 25.550234 38.65 27.539922 36.5 27.919922L36.5 28.5C36.5 29.33 35.83 30 35 30C34.17 30 33.5 29.33 33.5 28.5L33.5 27.960938C31.86 27.770937 30.750937 26.759531 30.210938 25.769531C29.860937 25.119531 29.980078 24.260547 30.580078 23.810547C31.360078 23.230547 32.429844 23.500078 32.839844 24.330078C32.899844 24.440078 33.219062 25 34.039062 25L35.75 25C36.44 25 37 24.44 37 23.75C37 23.06 36.44 22.5 35.75 22.5L34.759766 22.5C32.859766 22.5 31.080469 21.349062 30.480469 19.539062C29.680469 17.109063 31.27 14.769922 33.5 14.169922L33.5 13.5C33.5 12.67 34.17 12 35 12 z M 8.5 19L15.5 19C16.328 19 17 19.672 17 20.5C17 21.328 16.328 22 15.5 22L8.5 22C7.672 22 7 21.328 7 20.5C7 19.672 7.672 19 8.5 19 z M 8.5 26L11.5 26C12.328 26 13 26.672 13 27.5C13 28.328 12.328 29 11.5 29L8.5 29C7.672 29 7 28.328 7 27.5C7 26.672 7.672 26 8.5 26 z M 3 36L3 36.5C3 38.43 4.57 40 6.5 40L22.609375 40C21.769375 37.6 19.500937 36 16.960938 36L3 36 z M 31.039062 36C28.499062 36 26.230625 37.6 25.390625 40L41.5 40C43.43 40 45 38.43 45 36.5L45 36L31.039062 36 z" /></svg>
//             Stock Out
//           </NavLink>

//           <NavLink to='setting'>
//             <svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" viewBox="0 0 48 48"><path d="M24 4C22.423103 4 20.902664 4.1994284 19.451172 4.5371094 A 1.50015 1.50015 0 0 0 18.300781 5.8359375L17.982422 8.7382812C17.878304 9.6893592 17.328913 10.530853 16.5 11.009766C15.672739 11.487724 14.66862 11.540667 13.792969 11.15625L13.791016 11.15625L11.125 9.9824219 A 1.50015 1.50015 0 0 0 9.4257812 10.330078C7.3532865 12.539588 5.7626807 15.215064 4.859375 18.201172 A 1.50015 1.50015 0 0 0 5.4082031 19.845703L7.7734375 21.580078C8.5457929 22.147918 9 23.042801 9 24C9 24.95771 8.5458041 25.853342 7.7734375 26.419922L5.4082031 28.152344 A 1.50015 1.50015 0 0 0 4.859375 29.796875C5.7625845 32.782665 7.3519262 35.460112 9.4257812 37.669922 A 1.50015 1.50015 0 0 0 11.125 38.015625L13.791016 36.841797C14.667094 36.456509 15.672169 36.511947 16.5 36.990234C17.328913 37.469147 17.878304 38.310641 17.982422 39.261719L18.300781 42.164062 A 1.50015 1.50015 0 0 0 19.449219 43.460938C20.901371 43.799844 22.423103 44 24 44C25.576897 44 27.097336 43.800572 28.548828 43.462891 A 1.50015 1.50015 0 0 0 29.699219 42.164062L30.017578 39.261719C30.121696 38.310641 30.671087 37.469147 31.5 36.990234C32.327261 36.512276 33.33138 36.45738 34.207031 36.841797L36.875 38.015625 A 1.50015 1.50015 0 0 0 38.574219 37.669922C40.646713 35.460412 42.237319 32.782983 43.140625 29.796875 A 1.50015 1.50015 0 0 0 42.591797 28.152344L40.226562 26.419922C39.454197 25.853342 39 24.95771 39 24C39 23.04229 39.454197 22.146658 40.226562 21.580078L42.591797 19.847656 A 1.50015 1.50015 0 0 0 43.140625 18.203125C42.237319 15.217017 40.646713 12.539588 38.574219 10.330078 A 1.50015 1.50015 0 0 0 36.875 9.984375L34.207031 11.158203C33.33138 11.54262 32.327261 11.487724 31.5 11.009766C30.671087 10.530853 30.121696 9.6893592 30.017578 8.7382812L29.699219 5.8359375 A 1.50015 1.50015 0 0 0 28.550781 4.5390625C27.098629 4.2001555 25.576897 4 24 4 z M 24 7C24.974302 7 25.90992 7.1748796 26.847656 7.3398438L27.035156 9.0644531C27.243038 10.963375 28.346913 12.652335 30 13.607422C31.654169 14.563134 33.668094 14.673009 35.416016 13.904297L37.001953 13.207031C38.219788 14.669402 39.183985 16.321182 39.857422 18.130859L38.451172 19.162109C36.911538 20.291529 36 22.08971 36 24C36 25.91029 36.911538 27.708471 38.451172 28.837891L39.857422 29.869141C39.183985 31.678818 38.219788 33.330598 37.001953 34.792969L35.416016 34.095703C33.668094 33.326991 31.654169 33.436866 30 34.392578C28.346913 35.347665 27.243038 37.036625 27.035156 38.935547L26.847656 40.660156C25.910002 40.82466 24.973817 41 24 41C23.025698 41 22.09008 40.82512 21.152344 40.660156L20.964844 38.935547C20.756962 37.036625 19.653087 35.347665 18 34.392578C16.345831 33.436866 14.331906 33.326991 12.583984 34.095703L10.998047 34.792969C9.7799772 33.330806 8.8159425 31.678964 8.1425781 29.869141L9.5488281 28.837891C11.088462 27.708471 12 25.91029 12 24C12 22.08971 11.087719 20.290363 9.5488281 19.160156L8.1425781 18.128906C8.8163325 16.318532 9.7814501 14.667839 11 13.205078L12.583984 13.902344C14.331906 14.671056 16.345831 14.563134 18 13.607422C19.653087 12.652335 20.756962 10.963375 20.964844 9.0644531L21.152344 7.3398438C22.089998 7.1753403 23.026183 7 24 7 z M 24 16C19.599487 16 16 19.59949 16 24C16 28.40051 19.599487 32 24 32C28.400513 32 32 28.40051 32 24C32 19.59949 28.400513 16 24 16 z M 24 19C26.779194 19 29 21.220808 29 24C29 26.779192 26.779194 29 24 29C21.220806 29 19 26.779192 19 24C19 21.220808 21.220806 19 24 19 z" /></svg>
//             <span>Settings</span>
//           </NavLink>
//         </nav>

//       </div>

//       <Link to='logout'>
//         <svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" viewBox="0 0 48 48"><path d="M24 4C18.624631 4 13.709541 6.0816752 10.107422 9.5625 A 2.0002 2.0002 0 1 0 12.886719 12.4375C15.758599 9.6623248 19.651369 8 24 8C32.860089 8 40 15.139911 40 24C40 32.860089 32.860089 40 24 40C19.698374 40 15.755383 38.301028 12.882812 35.552734 A 2.0002743 2.0002743 0 1 0 10.117188 38.443359C13.716617 41.887065 18.645626 44 24 44C35.021911 44 44 35.021911 44 24C44 12.978089 35.021911 4 24 4 z M 11.960938 15.980469 A 2.0002 2.0002 0 0 0 10.585938 16.585938L4.5859375 22.585938 A 2.0002 2.0002 0 0 0 4.5859375 25.414062L10.585938 31.414062 A 2.0002 2.0002 0 1 0 13.414062 28.585938L10.828125 26L29 26 A 2.0002 2.0002 0 1 0 29 22L10.828125 22L13.414062 19.414062 A 2.0002 2.0002 0 0 0 11.960938 15.980469 z" /></svg>
//         Logout
//       </Link>

//     </aside>
//     <div className="main">
//     <TopNav />
 


// <Outlet />
//       </div>
   
//   </main>

//     </div>
//   )
// }

// export default Dashboard


// import React, { useState, useEffect } from 'react';
// import { useNavigate } from 'react-router-dom';
// import axios from 'axios';

// const Dashboard = () => {
//   const [isAuthenticated, setIsAuthenticated] = useState(false);
//   const navigate = useNavigate();

//   useEffect(() => {
//     const checkAuth = async () => {
//       try {
//         const token = localStorage.getItem('token');
//         if (token) {
//           // Token exists, check if it's valid
//           await axios.get('http://localhost:3000/api/auth/user/', { headers: { Authorization: token } });
//           setIsAuthenticated(true);
//         } else {
//           setIsAuthenticated(false);
//           navigate('/login');  // Redirect to login if token doesn't exist
//         }
//       } catch (error) {
//         setIsAuthenticated(false);
//         navigate('/login');  // Redirect to login if token is invalid or expired
//       }
//     };

//     checkAuth();
//   }, [navigate]);

//   if (!isAuthenticated) {
//     return null;  // Optionally, return a loading spinner or null while checking authentication
//   }

//   const userSignedIn = () => {
//     return cookies.getItem("jwt");

//   // If authenticated, render the protected content
//   return (
//     <div>
//       <h2>Protected Content</h2>
//       {/* Add your protected content here */}
//     </div>
//   );
// };



import React, { useEffect, useState } from "react";
import Dash from "./Dash";
import axios from "axios";
import { useNavigate } from "react-router-dom";


const Dashboard = () => {
  const navigate = useNavigate();
  const [auth, setAuth] = useState(false);
  const [name, setname] = useState('')
  const [image , setimage] = useState('');

  

  axios.defaults.withCredentials = true;

  useEffect(() => {
    axios.get('http://localhost:3000/api/auth/user')
      .then(res => {

        if (res.data.Status === "Success") {
          setAuth(true);
          setname(res.data.name);
          setimage(res.data.profile);
        } else {
          setAuth(false);
          navigate('/login');
        }
      })
      .catch(error => console.error(error));
  }, [navigate]);

  return (
    <div>
      {
        auth ? 
          <div> 
            <h1>hello {name}</h1>
            <img src={require(`./uploads/${image}`)} alt="" />
            <h1>{image}</h1>
            <h1>you are logged in successfully</h1>
          </div>
          : null
      }
    </div>
  );
};

export default Dashboard;

